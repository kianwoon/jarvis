/* 
 * Workflow Node Animations
 * Enhanced visual feedback for automation workflow execution
 */

:root {
  /* Animation duration variables */
  --pulse-duration: 2s;
  --glow-duration: 3s;
  --typing-duration: 1.5s;
  --flow-duration: 2s;
  --resize-duration: 0.3s;
  
  /* Status colors */
  --color-running: #2196F3;
  --color-success: #4CAF50;
  --color-error: #F44336;
  --color-idle: #9E9E9E;
  --color-processing: #FF9800;
  
  /* Node category colors */
  --color-agent: #9C27B0;        /* Purple for AI agents */
  --color-control: #2196F3;      /* Blue for control flow */
  --color-data: #00BCD4;         /* Cyan for data processing */
  --color-io: #4CAF50;           /* Green for input/output */
  --color-integration: #FF9800;  /* Orange for external integrations */
  --color-terminal: #607D8B;     /* Blue grey for start/end */
  
  /* Animation intensity levels */
  --animation-high: 1.03;        /* Maximum scale for high intensity */
  --animation-medium: 1.02;      /* Medium scale for balanced nodes */
  --animation-low: 1.01;         /* Minimal scale for subtle feedback */
}

/* FUCK IT - Let's use a simple but visible animation */
@keyframes siriGlow {
  0% {
    transform: scale(1);
    border-width: 2px;
    opacity: 1;
  }
  50% {
    transform: scale(1.1);
    border-width: 4px;
    opacity: 0.8;
  }
  100% {
    transform: scale(1);
    border-width: 2px;
    opacity: 1;
  }
}

/* Alternative approach using ::after pseudo-element for the growing rings */
@keyframes siriGlowPseudo {
  0% {
    width: 100%;
    height: 100%;
    opacity: 0;
  }
  5% {
    opacity: 1;
  }
  100% {
    width: calc(100% + 100px);
    height: calc(100% + 100px);
    opacity: 0;
  }
}

/* Vibrant Pulsing Animation - Alternative Style */
@keyframes vibrantPulse {
  0% {
    box-shadow: 
      0 0 0 0 rgba(255, 64, 129, 0.7),
      0 0 0 0 rgba(156, 39, 176, 0.5),
      0 0 40px rgba(33, 150, 243, 0.8);
    border-color: rgba(33, 150, 243, 1);
    filter: brightness(1) saturate(1.2);
  }
  50% {
    box-shadow: 
      0 0 0 20px rgba(255, 64, 129, 0.4),
      0 0 0 40px rgba(156, 39, 176, 0.2),
      0 0 80px rgba(33, 150, 243, 1);
    border-color: rgba(255, 64, 129, 1);
    filter: brightness(1.3) saturate(1.8);
  }  
  100% {
    box-shadow: 
      0 0 0 0 rgba(255, 64, 129, 0.7),
      0 0 0 0 rgba(156, 39, 176, 0.5),
      0 0 40px rgba(33, 150, 243, 0.8);
    border-color: rgba(33, 150, 243, 1);
    filter: brightness(1) saturate(1.2);
  }
}

/* Progress Wave Animation */
@keyframes progressWave {
  0% {
    background-position: -100% 0;
  }
  100% {
    background-position: 100% 0;
  }
}

/* Typing Dots Animation */
@keyframes typingDots {
  0%, 20% {
    opacity: 0;
    transform: scale(0.8);
  }
  33%, 53% {
    opacity: 1;
    transform: scale(1);
  }
  80%, 100% {
    opacity: 0;
    transform: scale(0.8);
  }
}

/* Success Flash Animation */
@keyframes successFlash {
  0% {
    background-color: rgba(76, 175, 80, 0.1);
    border-color: rgba(76, 175, 80, 0.5);
  }
  50% {
    background-color: rgba(76, 175, 80, 0.3);
    border-color: rgba(76, 175, 80, 1);
    box-shadow: 0 0 20px rgba(76, 175, 80, 0.4);
  }
  100% {
    background-color: rgba(76, 175, 80, 0.1);
    border-color: rgba(76, 175, 80, 0.5);
  }
}

/* Error Shake Animation */
@keyframes errorShake {
  0%, 100% { transform: translateX(0); }
  10%, 30%, 50%, 70%, 90% { transform: translateX(-2px); }
  20%, 40%, 60%, 80% { transform: translateX(2px); }
}

/* Smooth Resize Animation */
@keyframes smoothResize {
  from {
    transform: scale(1);
  }
  to {
    transform: scale(1.02);
  }
}

/* Data Flow Animation Between Nodes */
@keyframes dataFlow {
  0% {
    stroke-dashoffset: 100;
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  100% {
    stroke-dashoffset: 0;
    opacity: 0;
  }
}

/* Node Category Specific Animations */

/* Control Flow Nodes Animation (Router, Condition, Switch, etc.) */
@keyframes controlGlow {
  0% {
    box-shadow: 
      0 0 0 0 rgba(33, 150, 243, 0.7),
      0 0 0 0 rgba(33, 150, 243, 0.5),
      0 0 20px rgba(33, 150, 243, 0.3);
    border-color: rgba(33, 150, 243, 1) !important;
    transform: scale(1) !important;
  }
  50% {
    box-shadow: 
      0 0 0 12px rgba(33, 150, 243, 0.4),
      0 0 0 24px rgba(33, 150, 243, 0.2),
      0 0 40px rgba(33, 150, 243, 0.6);
    border-color: rgba(66, 165, 245, 1) !important;
    transform: scale(1.15) !important;  /* Even more dramatic 15% growth for visibility */
  }
  100% {
    box-shadow: 
      0 0 0 0 rgba(33, 150, 243, 0.7),
      0 0 0 0 rgba(33, 150, 243, 0.5),
      0 0 20px rgba(33, 150, 243, 0.3);
    border-color: rgba(33, 150, 243, 1) !important;
    transform: scale(1) !important;
  }
}

/* Data Processing Nodes Animation (Cache, Transform, Aggregator, etc.) */
@keyframes dataGlow {
  0% {
    box-shadow: 
      0 0 0 0 rgba(0, 188, 212, 0.7),
      0 0 0 0 rgba(0, 188, 212, 0.5),
      0 0 20px rgba(0, 188, 212, 0.3);
    border-color: rgba(0, 188, 212, 1);
    transform: scale(1);
  }
  50% {
    box-shadow: 
      0 0 0 12px rgba(0, 188, 212, 0.4),
      0 0 0 24px rgba(0, 188, 212, 0.2),
      0 0 40px rgba(0, 188, 212, 0.6);
    border-color: rgba(38, 198, 218, 1);
    transform: scale(var(--animation-medium));
  }
  100% {
    box-shadow: 
      0 0 0 0 rgba(0, 188, 212, 0.7),
      0 0 0 0 rgba(0, 188, 212, 0.5),
      0 0 20px rgba(0, 188, 212, 0.3);
    border-color: rgba(0, 188, 212, 1);
    transform: scale(1);
  }
}

/* I/O Nodes Animation (Input, Output, etc.) */
@keyframes ioGlow {
  0% {
    box-shadow: 
      0 0 0 0 rgba(76, 175, 80, 0.7),
      0 0 0 0 rgba(76, 175, 80, 0.5),
      0 0 15px rgba(76, 175, 80, 0.3);
    border-color: rgba(76, 175, 80, 1);
    transform: scale(1);
  }
  50% {
    box-shadow: 
      0 0 0 8px rgba(76, 175, 80, 0.4),
      0 0 0 16px rgba(76, 175, 80, 0.2),
      0 0 30px rgba(76, 175, 80, 0.6);
    border-color: rgba(102, 187, 106, 1);
    transform: scale(var(--animation-low));
  }
  100% {
    box-shadow: 
      0 0 0 0 rgba(76, 175, 80, 0.7),
      0 0 0 0 rgba(76, 175, 80, 0.5),
      0 0 15px rgba(76, 175, 80, 0.3);
    border-color: rgba(76, 175, 80, 1);
    transform: scale(1);
  }
}

/* Integration Nodes Animation (HTTP, Redis, MCP, etc.) */
@keyframes integrationGlow {
  0% {
    box-shadow: 
      0 0 0 0 rgba(255, 152, 0, 0.7),
      0 0 0 0 rgba(255, 152, 0, 0.5),
      0 0 20px rgba(255, 152, 0, 0.3);
    border-color: rgba(255, 152, 0, 1);
    transform: scale(1);
  }
  50% {
    box-shadow: 
      0 0 0 12px rgba(255, 152, 0, 0.4),
      0 0 0 24px rgba(255, 152, 0, 0.2),
      0 0 40px rgba(255, 152, 0, 0.6);
    border-color: rgba(255, 183, 77, 1);
    transform: scale(var(--animation-medium));
  }
  100% {
    box-shadow: 
      0 0 0 0 rgba(255, 152, 0, 0.7),
      0 0 0 0 rgba(255, 152, 0, 0.5),
      0 0 20px rgba(255, 152, 0, 0.3);
    border-color: rgba(255, 152, 0, 1);
    transform: scale(1);
  }
}

/* Terminal Nodes Animation (Start, End) */
@keyframes terminalGlow {
  0% {
    box-shadow: 
      0 0 0 0 rgba(96, 125, 139, 0.6),
      0 0 0 0 rgba(96, 125, 139, 0.4),
      0 0 15px rgba(96, 125, 139, 0.3);
    border-color: rgba(96, 125, 139, 1);
    transform: scale(1);
  }
  50% {
    box-shadow: 
      0 0 0 8px rgba(96, 125, 139, 0.3),
      0 0 0 16px rgba(96, 125, 139, 0.2),
      0 0 25px rgba(96, 125, 139, 0.5);
    border-color: rgba(120, 144, 156, 1);
    transform: scale(var(--animation-low));
  }
  100% {
    box-shadow: 
      0 0 0 0 rgba(96, 125, 139, 0.6),
      0 0 0 0 rgba(96, 125, 139, 0.4),
      0 0 15px rgba(96, 125, 139, 0.3);
    border-color: rgba(96, 125, 139, 1);
    transform: scale(1);
  }
}

/* Node Status Classes */

.workflow-node--running {
  animation: siriGlow var(--pulse-duration) infinite ease-in-out !important;
  position: relative !important;
  z-index: 10 !important;
  border: 2px solid rgba(33, 150, 243, 1) !important;
}

.workflow-node--running-vibrant {
  animation: vibrantPulse 1.8s infinite ease-in-out;
  position: relative;
  z-index: 10;
}

/* Universal Node Category Running Classes */
.workflow-node--running-agent {
  animation: siriGlow var(--pulse-duration) infinite ease-in-out !important;
  position: relative !important;
  z-index: 10 !important;
  border: 3px solid var(--color-agent) !important;
  overflow: visible !important;
}

/* Growing ring effect using ::before AND ::after for double rings */
.workflow-node--running-agent::before,
.workflow-node--running-agent::after {
  content: '' !important;
  position: absolute !important;
  top: 50% !important;
  left: 50% !important;
  width: 100% !important;
  height: 100% !important;
  transform: translate(-50%, -50%) !important;
  border: 2px solid var(--color-agent) !important;
  border-radius: inherit !important;
  pointer-events: none !important;
}

.workflow-node--running-agent::before {
  animation: growingRing1 2s infinite ease-out !important;
}

.workflow-node--running-agent::after {
  animation: growingRing2 2s infinite ease-out !important;
  animation-delay: 1s !important;
}

@keyframes growingRing1 {
  0% {
    width: 100%;
    height: 100%;
    opacity: 0.8;
    border-width: 3px;
  }
  100% {
    width: calc(100% + 60px);
    height: calc(100% + 60px);
    opacity: 0;
    border-width: 1px;
  }
}

@keyframes growingRing2 {
  0% {
    width: 100%;
    height: 100%;
    opacity: 0.6;
    border-width: 2px;
  }
  100% {
    width: calc(100% + 80px);
    height: calc(100% + 80px);
    opacity: 0;
    border-width: 1px;
  }
}

/* React Flow specific overrides to ensure animations are visible */
.react-flow__node .workflow-node--running-agent {
  overflow: visible !important;
}

.react-flow__node {
  overflow: visible !important;
}

/* Removed pseudo-element approach - using box-shadow instead */

.workflow-node--running-control {
  animation: controlGlow var(--pulse-duration) infinite ease-in-out !important;
  position: relative !important;
  z-index: 10 !important;
  border: 2px solid var(--color-control) !important;
}

.workflow-node--running-data {
  animation: dataGlow var(--pulse-duration) infinite ease-in-out !important;
  position: relative !important;
  z-index: 10 !important;
  border: 2px solid var(--color-data) !important;
}

.workflow-node--running-io {
  animation: ioGlow var(--pulse-duration) infinite ease-in-out !important;
  position: relative !important;
  z-index: 10 !important;
  border: 2px solid var(--color-io) !important;
}

.workflow-node--running-integration {
  animation: integrationGlow var(--pulse-duration) infinite ease-in-out !important;
  position: relative !important;
  z-index: 10 !important;
  border: 2px solid var(--color-integration) !important;
}

.workflow-node--running-terminal {
  animation: terminalGlow var(--pulse-duration) infinite ease-in-out !important;
  position: relative !important;
  z-index: 10 !important;
  border: 2px solid var(--color-terminal) !important;
}

/* Disabled - conflicts with category-specific animations
.workflow-node--running::before {
  content: '';
  position: absolute;
  top: -4px;
  left: -4px;
  right: -4px;
  bottom: -4px;
  background: linear-gradient(
    45deg,
    rgba(33, 150, 243, 0.4),
    rgba(255, 64, 129, 0.4),
    rgba(156, 39, 176, 0.4),
    rgba(63, 81, 181, 0.4),
    rgba(33, 150, 243, 0.4)
  );
  background-size: 400% 400%;
  animation: siriFlow 3s infinite linear;
  border-radius: inherit;
  z-index: -1;
}
*/

.workflow-node--running-vibrant::before {
  content: '';
  position: absolute;
  top: -3px;
  left: -3px;
  right: -3px;
  bottom: -3px;
  background: linear-gradient(
    90deg,
    rgba(255, 64, 129, 0.6),
    rgba(156, 39, 176, 0.6),
    rgba(33, 150, 243, 0.6),
    rgba(255, 64, 129, 0.6)
  );
  background-size: 300% 100%;
  animation: vibrantFlow 2s infinite linear;
  border-radius: inherit;
  z-index: -1;
}

/* Category-specific flowing borders */
.workflow-node--running-control::before {
  content: '';
  position: absolute;
  top: -4px; left: -4px; right: -4px; bottom: -4px;
  background: linear-gradient(
    45deg,
    rgba(33, 150, 243, 0.3),
    rgba(66, 165, 245, 0.4),
    rgba(144, 202, 249, 0.3),
    rgba(33, 150, 243, 0.3)
  );
  background-size: 300% 300%;
  animation: controlFlow 2.5s infinite linear;
  border-radius: inherit;
  z-index: -1;
}

.workflow-node--running-data::before {
  content: '';
  position: absolute;
  top: -4px; left: -4px; right: -4px; bottom: -4px;
  background: linear-gradient(
    45deg,
    rgba(0, 188, 212, 0.3),
    rgba(38, 198, 218, 0.4),
    rgba(77, 208, 225, 0.3),
    rgba(0, 188, 212, 0.3)
  );
  background-size: 300% 300%;
  animation: dataFlow 2.5s infinite linear;
  border-radius: inherit;
  z-index: -1;
}

.workflow-node--running-io::before {
  content: '';
  position: absolute;
  top: -4px; left: -4px; right: -4px; bottom: -4px;
  background: linear-gradient(
    45deg,
    rgba(76, 175, 80, 0.3),
    rgba(102, 187, 106, 0.4),
    rgba(129, 199, 132, 0.3),
    rgba(76, 175, 80, 0.3)
  );
  background-size: 300% 300%;
  animation: ioFlow 2s infinite linear;
  border-radius: inherit;
  z-index: -1;
}

.workflow-node--running-integration::before {
  content: '';
  position: absolute;
  top: -4px; left: -4px; right: -4px; bottom: -4px;
  background: linear-gradient(
    45deg,
    rgba(255, 152, 0, 0.3),
    rgba(255, 183, 77, 0.4),
    rgba(255, 204, 128, 0.3),
    rgba(255, 152, 0, 0.3)
  );
  background-size: 300% 300%;
  animation: integrationFlow 2.5s infinite linear;
  border-radius: inherit;
  z-index: -1;
}

.workflow-node--running-terminal::before {
  content: '';
  position: absolute;
  top: -4px; left: -4px; right: -4px; bottom: -4px;
  background: linear-gradient(
    45deg,
    rgba(96, 125, 139, 0.2),
    rgba(120, 144, 156, 0.3),
    rgba(144, 164, 174, 0.2),
    rgba(96, 125, 139, 0.2)
  );
  background-size: 300% 300%;
  animation: terminalFlow 3s infinite linear;
  border-radius: inherit;
  z-index: -1;
}

@keyframes siriFlow {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

@keyframes vibrantFlow {
  0% {
    background-position: -100% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

/* Category-specific flowing border animations */
@keyframes controlFlow {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

@keyframes dataFlow {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

@keyframes ioFlow {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

@keyframes integrationFlow {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

@keyframes terminalFlow {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

.workflow-node--success {
  animation: successFlash 0.6s ease-in-out;
  border-color: var(--color-success) !important;
}

.workflow-node--error {
  animation: errorShake 0.5s ease-in-out;
  border-color: var(--color-error) !important;
  background-color: rgba(244, 67, 54, 0.08) !important;
}

.workflow-node--idle {
  border: 2px solid var(--color-idle) !important;
  transition: all 0.3s ease;
}

/* Default agent node styling */
.workflow-node {
  border: 2px solid #9c27b0 !important; /* Default purple border for agent nodes */
  transition: all var(--resize-duration) ease-in-out;
}

.workflow-node--idle:hover {
  border-color: rgba(156, 39, 176, 0.6);
  transform: scale(1.02);
}

/* Status Icon Animations */
.status-icon--running {
  animation: spin 2s linear infinite;
}

.status-icon--success {
  animation: bounceIn 0.6s ease-out;
}

.status-icon--error {
  animation: errorPulse 0.5s ease-in-out;
}

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

@keyframes bounceIn {
  0% {
    opacity: 0;
    transform: scale(0.3);
  }
  50% {
    opacity: 1;
    transform: scale(1.1);
  }
  70% {
    transform: scale(0.9);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes errorPulse {
  0%, 100% {
    color: var(--color-error);
    transform: scale(1);
  }
  50% {
    color: #ff1744;
    transform: scale(1.2);
  }
}

/* Typing Indicator */
.typing-indicator {
  display: inline-flex;
  align-items: center;
  gap: 2px;
  margin-left: 4px;
}

.typing-dot {
  width: 3px;
  height: 3px;
  background-color: var(--color-running);
  border-radius: 50%;
  animation: typingDots var(--typing-duration) infinite;
}

.typing-dot:nth-child(2) {
  animation-delay: 0.2s;
}

.typing-dot:nth-child(3) {
  animation-delay: 0.4s;
}

/* Progress Bar Animation */
.progress-bar {
  position: relative;
  width: 100%;
  height: 2px;
  background-color: rgba(33, 150, 243, 0.1);
  border-radius: 1px;
  overflow: hidden;
}

.progress-bar::after {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    var(--color-running),
    transparent
  );
  animation: progressWave var(--flow-duration) infinite linear;
}

/* Panel Expand Animation */
.panel-expand-enter {
  max-height: 0;
  opacity: 0;
  transform: scaleY(0);
  transform-origin: top;
}

.panel-expand-enter-active {
  max-height: 500px;
  opacity: 1;
  transform: scaleY(1);
  transition: all var(--resize-duration) ease-out;
}

.panel-expand-exit {
  max-height: 500px;
  opacity: 1;
  transform: scaleY(1);
}

.panel-expand-exit-active {
  max-height: 0;
  opacity: 0;
  transform: scaleY(0);
  transition: all var(--resize-duration) ease-in;
}

/* Smooth Node Resize */
.node-resize-transition {
  transition: 
    width var(--resize-duration) ease-out,
    height var(--resize-duration) ease-out,
    min-width var(--resize-duration) ease-out,
    max-width var(--resize-duration) ease-out;
}

/* Tool Usage Indicator */
.tool-indicator {
  position: relative;
  display: inline-block;
}

.tool-indicator--active::after {
  content: '';
  position: absolute;
  top: -2px;
  right: -2px;
  width: 6px;
  height: 6px;
  background-color: var(--color-processing);
  border-radius: 50%;
  animation: toolPulse 1s infinite ease-in-out;
}

@keyframes toolPulse {
  0%, 100% {
    opacity: 1;
    transform: scale(1);
  }
  50% {
    opacity: 0.5;
    transform: scale(1.3);
  }
}

/* Accessibility: Respect reduced motion preferences */
@media (prefers-reduced-motion: reduce) {
  .workflow-node--running,
  .workflow-node--running-agent,
  .workflow-node--running-control,
  .workflow-node--running-data,
  .workflow-node--running-io,
  .workflow-node--running-integration,
  .workflow-node--running-terminal,
  .workflow-node--running-vibrant {
    animation: none !important;
    border-color: var(--color-running) !important;
    border-width: 3px !important; /* Thicker border for reduced motion feedback */
  }
  
  /* Disable animations for reduced motion, but keep our growing ring visible */
  .workflow-node--running::before,
  .workflow-node--running-control::before,
  .workflow-node--running-data::before,
  .workflow-node--running-io::before,
  .workflow-node--running-integration::before,
  .workflow-node--running-terminal::before,
  .workflow-node--running-vibrant::before {
    animation: none;
    display: none;
  }
  
  /* Keep agent animation visible even in reduced motion */
  .workflow-node--running-agent::before {
    animation: none;
    opacity: 0.5;
    transform: scale(1.1);
  }
  
  .status-icon--running {
    animation: none;
  }
  
  .typing-dot {
    animation: none;
    opacity: 0.7;
  }
  
  .progress-bar::after {
    animation: none;
    display: none;
  }
  
  .workflow-node {
    transition: none;
  }
  
  .node-resize-transition {
    transition: none;
  }
}

/* Dark theme adjustments */
@media (prefers-color-scheme: dark) {
  :root {
    --color-running: #64B5F6;
    --color-success: #81C784;
    --color-error: #E57373;
    --color-idle: #BDBDBD;
    --color-processing: #FFB74D;
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .workflow-node--running {
    border-width: 3px;
  }
  
  .workflow-node--success {
    border-width: 3px;
  }
  
  .workflow-node--error {
    border-width: 3px;
  }
}